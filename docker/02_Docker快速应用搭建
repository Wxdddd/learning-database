### Doker快速应用搭建

```shell
# 查看是否有运行的docker镜像
[root@VM-0-6-centos ~]# docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

# 查看docker镜像
[root@VM-0-6-centos ~]# docker images
REPOSITORY   TAG       IMAGE ID   CREATED   SIZE
```

### 1. HelloWorld

```shell
# 直接运行hello world镜像，首先找本地镜像有没有hello world，如果本地没有则从网上去拉取hello world
[root@VM-0-6-centos ~]# docker run hello-world

# 因为hello-world是执行完成后就停止的容器，所以docker ps查询不到
[root@VM-0-6-centos ~]# docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

# 查询docker曾经存留过的容器以及这个容器的运行状态及其结果
[root@VM-0-6-centos ~]# docker ps -a
CONTAINER ID   IMAGE         COMMAND    CREATED         STATUS                     PORTS     NAMES
d8d91b116fcf   hello-world   "/hello"   7 minutes ago   Exited (0) 7 minutes ago             objective_lehmann
```

### 2. Redis

```shell
# 使redis3.2版本以后台的方式运行。-d：后台方式运行。:3.2表示镜像版本号（不指定版本号会默认下载最新的版本）。redis-server：redis以server的方式运行起来。
[root@VM-0-6-centos ~]# docker run -d redis:3.2 redis-server

[root@VM-0-6-centos ~]# docker ps
CONTAINER ID   IMAGE       COMMAND                  CREATED          STATUS          PORTS      NAMES
27e81846c296   redis:3.2   "docker-entrypoint.s…"   22 seconds ago   Up 21 seconds   6379/tcp   dreamy_buck

# 使用redis-cli与docker镜像里面的redis进行交互。如果希望使用bash交互将redis-cli替换为bash即可。 27e81846c296：镜像id。
[root@VM-0-6-centos ~]# docker exec -it 27e81846c296 redis-cli
127.0.0.1:6379>

```

### 3. Nginx

```shell
# -p 80:80 ：-p表示端口映射，第一个80表示服务器端口，第二个80是容器内部端口，也就是镜像80端口映射到服务器80端口
[root@VM-0-6-centos ~]# docker run -d -p 80:80 nginx

[root@VM-0-6-centos ~]# docker ps
CONTAINER ID   IMAGE       COMMAND                  CREATED          STATUS          PORTS                               NAMES
01a754814f4c   nginx       "/docker-entrypoint.…"   2 minutes ago    Up 2 minutes    0.0.0.0:80->80/tcp, :::80->80/tcp   eager_dijkstra
```



